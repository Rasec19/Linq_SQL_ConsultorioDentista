#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQ_SQL_Consultorio
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Consultorio")]
	public partial class ConexionConsultorioDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertDentistas(Dentistas instance);
    partial void UpdateDentistas(Dentistas instance);
    partial void DeleteDentistas(Dentistas instance);
    partial void InsertCitas(Citas instance);
    partial void UpdateCitas(Citas instance);
    partial void DeleteCitas(Citas instance);
    partial void InsertEspecialidades(Especialidades instance);
    partial void UpdateEspecialidades(Especialidades instance);
    partial void DeleteEspecialidades(Especialidades instance);
    partial void InsertPacientes(Pacientes instance);
    partial void UpdatePacientes(Pacientes instance);
    partial void DeletePacientes(Pacientes instance);
    #endregion
		
		public ConexionConsultorioDataContext() : 
				base(global::LINQ_SQL_Consultorio.Properties.Settings.Default.ConsultorioConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionConsultorioDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionConsultorioDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionConsultorioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConexionConsultorioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Dentistas> Dentistas
		{
			get
			{
				return this.GetTable<Dentistas>();
			}
		}
		
		public System.Data.Linq.Table<Citas> Citas
		{
			get
			{
				return this.GetTable<Citas>();
			}
		}
		
		public System.Data.Linq.Table<Especialidades> Especialidades
		{
			get
			{
				return this.GetTable<Especialidades>();
			}
		}
		
		public System.Data.Linq.Table<Pacientes> Pacientes
		{
			get
			{
				return this.GetTable<Pacientes>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarDatosDentistas")]
		public ISingleResult<MostrarDatosDentistasResult> MostrarDatosDentistas([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dentista)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dentista);
			return ((ISingleResult<MostrarDatosDentistasResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarCitas_Por_IdCita")]
		public ISingleResult<MostrarCitas_Por_IdCitaResult> MostrarCitas_Por_IdCita([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCita)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCita);
			return ((ISingleResult<MostrarCitas_Por_IdCitaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarEspecialidad")]
		public ISingleResult<MostrarEspecialidadResult> MostrarEspecialidad()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MostrarEspecialidadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarDatosDentistaGeneral")]
		public ISingleResult<MostrarDatosDentistaGeneralResult> MostrarDatosDentistaGeneral()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MostrarDatosDentistaGeneralResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarCitasGeneral")]
		public ISingleResult<MostrarCitasGeneralResult> MostrarCitasGeneral()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MostrarCitasGeneralResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarPacientesGeneral")]
		public ISingleResult<MostrarPacientesGeneralResult> MostrarPacientesGeneral()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<MostrarPacientesGeneralResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MostrarCitas_Por_Id_Paciente")]
		public ISingleResult<MostrarCitas_Por_Id_PacienteResult> MostrarCitas_Por_Id_Paciente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPaciente)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idPaciente);
			return ((ISingleResult<MostrarCitas_Por_Id_PacienteResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dentistas")]
	public partial class Dentistas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Dentista;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private int _Edad;
		
		private int _Especialidad;
		
		private EntitySet<Citas> _Citas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_DentistaChanging(int value);
    partial void OnId_DentistaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnEdadChanging(int value);
    partial void OnEdadChanged();
    partial void OnEspecialidadChanging(int value);
    partial void OnEspecialidadChanged();
    #endregion
		
		public Dentistas()
		{
			this._Citas = new EntitySet<Citas>(new Action<Citas>(this.attach_Citas), new Action<Citas>(this.detach_Citas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Dentista", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Dentista
		{
			get
			{
				return this._Id_Dentista;
			}
			set
			{
				if ((this._Id_Dentista != value))
				{
					this.OnId_DentistaChanging(value);
					this.SendPropertyChanging();
					this._Id_Dentista = value;
					this.SendPropertyChanged("Id_Dentista");
					this.OnId_DentistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="Char(60) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="Int NOT NULL")]
		public int Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this.OnEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Especialidad = value;
					this.SendPropertyChanged("Especialidad");
					this.OnEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dentistas_Citas", Storage="_Citas", ThisKey="Id_Dentista", OtherKey="Id_Dentista")]
		public EntitySet<Citas> Citas
		{
			get
			{
				return this._Citas;
			}
			set
			{
				this._Citas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Citas(Citas entity)
		{
			this.SendPropertyChanging();
			entity.Dentistas = this;
		}
		
		private void detach_Citas(Citas entity)
		{
			this.SendPropertyChanging();
			entity.Dentistas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Citas")]
	public partial class Citas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Cita;
		
		private int _Id_Dentista;
		
		private int _Id_Especialidad;
		
		private int _Id_Paciente;
		
		private string _Descripcion_Trabajo;
		
		private EntityRef<Dentistas> _Dentistas;
		
		private EntityRef<Especialidades> _Especialidades;
		
		private EntityRef<Pacientes> _Pacientes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_CitaChanging(int value);
    partial void OnId_CitaChanged();
    partial void OnId_DentistaChanging(int value);
    partial void OnId_DentistaChanged();
    partial void OnId_EspecialidadChanging(int value);
    partial void OnId_EspecialidadChanged();
    partial void OnId_PacienteChanging(int value);
    partial void OnId_PacienteChanged();
    partial void OnDescripcion_TrabajoChanging(string value);
    partial void OnDescripcion_TrabajoChanged();
    #endregion
		
		public Citas()
		{
			this._Dentistas = default(EntityRef<Dentistas>);
			this._Especialidades = default(EntityRef<Especialidades>);
			this._Pacientes = default(EntityRef<Pacientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Cita", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Cita
		{
			get
			{
				return this._Id_Cita;
			}
			set
			{
				if ((this._Id_Cita != value))
				{
					this.OnId_CitaChanging(value);
					this.SendPropertyChanging();
					this._Id_Cita = value;
					this.SendPropertyChanged("Id_Cita");
					this.OnId_CitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Dentista", DbType="Int NOT NULL")]
		public int Id_Dentista
		{
			get
			{
				return this._Id_Dentista;
			}
			set
			{
				if ((this._Id_Dentista != value))
				{
					if (this._Dentistas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_DentistaChanging(value);
					this.SendPropertyChanging();
					this._Id_Dentista = value;
					this.SendPropertyChanged("Id_Dentista");
					this.OnId_DentistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Especialidad", DbType="Int NOT NULL")]
		public int Id_Especialidad
		{
			get
			{
				return this._Id_Especialidad;
			}
			set
			{
				if ((this._Id_Especialidad != value))
				{
					if (this._Especialidades.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Id_Especialidad = value;
					this.SendPropertyChanged("Id_Especialidad");
					this.OnId_EspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Paciente", DbType="Int NOT NULL")]
		public int Id_Paciente
		{
			get
			{
				return this._Id_Paciente;
			}
			set
			{
				if ((this._Id_Paciente != value))
				{
					if (this._Pacientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PacienteChanging(value);
					this.SendPropertyChanging();
					this._Id_Paciente = value;
					this.SendPropertyChanged("Id_Paciente");
					this.OnId_PacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion_Trabajo", DbType="Char(200) NOT NULL", CanBeNull=false)]
		public string Descripcion_Trabajo
		{
			get
			{
				return this._Descripcion_Trabajo;
			}
			set
			{
				if ((this._Descripcion_Trabajo != value))
				{
					this.OnDescripcion_TrabajoChanging(value);
					this.SendPropertyChanging();
					this._Descripcion_Trabajo = value;
					this.SendPropertyChanged("Descripcion_Trabajo");
					this.OnDescripcion_TrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dentistas_Citas", Storage="_Dentistas", ThisKey="Id_Dentista", OtherKey="Id_Dentista", IsForeignKey=true)]
		public Dentistas Dentistas
		{
			get
			{
				return this._Dentistas.Entity;
			}
			set
			{
				Dentistas previousValue = this._Dentistas.Entity;
				if (((previousValue != value) 
							|| (this._Dentistas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dentistas.Entity = null;
						previousValue.Citas.Remove(this);
					}
					this._Dentistas.Entity = value;
					if ((value != null))
					{
						value.Citas.Add(this);
						this._Id_Dentista = value.Id_Dentista;
					}
					else
					{
						this._Id_Dentista = default(int);
					}
					this.SendPropertyChanged("Dentistas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidades_Citas", Storage="_Especialidades", ThisKey="Id_Especialidad", OtherKey="Id_Especialidad", IsForeignKey=true)]
		public Especialidades Especialidades
		{
			get
			{
				return this._Especialidades.Entity;
			}
			set
			{
				Especialidades previousValue = this._Especialidades.Entity;
				if (((previousValue != value) 
							|| (this._Especialidades.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Especialidades.Entity = null;
						previousValue.Citas.Remove(this);
					}
					this._Especialidades.Entity = value;
					if ((value != null))
					{
						value.Citas.Add(this);
						this._Id_Especialidad = value.Id_Especialidad;
					}
					else
					{
						this._Id_Especialidad = default(int);
					}
					this.SendPropertyChanged("Especialidades");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacientes_Citas", Storage="_Pacientes", ThisKey="Id_Paciente", OtherKey="Id_Paciente", IsForeignKey=true)]
		public Pacientes Pacientes
		{
			get
			{
				return this._Pacientes.Entity;
			}
			set
			{
				Pacientes previousValue = this._Pacientes.Entity;
				if (((previousValue != value) 
							|| (this._Pacientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacientes.Entity = null;
						previousValue.Citas.Remove(this);
					}
					this._Pacientes.Entity = value;
					if ((value != null))
					{
						value.Citas.Add(this);
						this._Id_Paciente = value.Id_Paciente;
					}
					else
					{
						this._Id_Paciente = default(int);
					}
					this.SendPropertyChanged("Pacientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Especialidades")]
	public partial class Especialidades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Especialidad;
		
		private string _Nombre;
		
		private EntitySet<Citas> _Citas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_EspecialidadChanging(int value);
    partial void OnId_EspecialidadChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Especialidades()
		{
			this._Citas = new EntitySet<Citas>(new Action<Citas>(this.attach_Citas), new Action<Citas>(this.detach_Citas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Especialidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Especialidad
		{
			get
			{
				return this._Id_Especialidad;
			}
			set
			{
				if ((this._Id_Especialidad != value))
				{
					this.OnId_EspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Id_Especialidad = value;
					this.SendPropertyChanged("Id_Especialidad");
					this.OnId_EspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidades_Citas", Storage="_Citas", ThisKey="Id_Especialidad", OtherKey="Id_Especialidad")]
		public EntitySet<Citas> Citas
		{
			get
			{
				return this._Citas;
			}
			set
			{
				this._Citas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Citas(Citas entity)
		{
			this.SendPropertyChanging();
			entity.Especialidades = this;
		}
		
		private void detach_Citas(Citas entity)
		{
			this.SendPropertyChanging();
			entity.Especialidades = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pacientes")]
	public partial class Pacientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Paciente;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private string _Telelfono;
		
		private EntitySet<Citas> _Citas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PacienteChanging(int value);
    partial void OnId_PacienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelelfonoChanging(string value);
    partial void OnTelelfonoChanged();
    #endregion
		
		public Pacientes()
		{
			this._Citas = new EntitySet<Citas>(new Action<Citas>(this.attach_Citas), new Action<Citas>(this.detach_Citas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Paciente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Paciente
		{
			get
			{
				return this._Id_Paciente;
			}
			set
			{
				if ((this._Id_Paciente != value))
				{
					this.OnId_PacienteChanging(value);
					this.SendPropertyChanging();
					this._Id_Paciente = value;
					this.SendPropertyChanged("Id_Paciente");
					this.OnId_PacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="Char(60) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telelfono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Telelfono
		{
			get
			{
				return this._Telelfono;
			}
			set
			{
				if ((this._Telelfono != value))
				{
					this.OnTelelfonoChanging(value);
					this.SendPropertyChanging();
					this._Telelfono = value;
					this.SendPropertyChanged("Telelfono");
					this.OnTelelfonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacientes_Citas", Storage="_Citas", ThisKey="Id_Paciente", OtherKey="Id_Paciente")]
		public EntitySet<Citas> Citas
		{
			get
			{
				return this._Citas;
			}
			set
			{
				this._Citas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Citas(Citas entity)
		{
			this.SendPropertyChanging();
			entity.Pacientes = this;
		}
		
		private void detach_Citas(Citas entity)
		{
			this.SendPropertyChanging();
			entity.Pacientes = null;
		}
	}
	
	public partial class MostrarDatosDentistasResult
	{
		
		private string _Dentista;
		
		private string _Especialidad;
		
		private int _Edad;
		
		private string _Telefono;
		
		private string _Direccion;
		
		public MostrarDatosDentistasResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dentista", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Dentista
		{
			get
			{
				return this._Dentista;
			}
			set
			{
				if ((this._Dentista != value))
				{
					this._Dentista = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this._Edad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this._Telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="Char(60) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this._Direccion = value;
				}
			}
		}
	}
	
	public partial class MostrarCitas_Por_IdCitaResult
	{
		
		private string _Paciente;
		
		private string _Dentista;
		
		private string _Especialidad;
		
		private string _Descripcion;
		
		public MostrarCitas_Por_IdCitaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dentista", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Dentista
		{
			get
			{
				return this._Dentista;
			}
			set
			{
				if ((this._Dentista != value))
				{
					this._Dentista = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Char(200) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this._Descripcion = value;
				}
			}
		}
	}
	
	public partial class MostrarEspecialidadResult
	{
		
		private int _Codigo;
		
		private string _Esepecialidad;
		
		public MostrarEspecialidadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esepecialidad", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Esepecialidad
		{
			get
			{
				return this._Esepecialidad;
			}
			set
			{
				if ((this._Esepecialidad != value))
				{
					this._Esepecialidad = value;
				}
			}
		}
	}
	
	public partial class MostrarDatosDentistaGeneralResult
	{
		
		private string _Dentista;
		
		private string _Especialidad;
		
		private int _Edad;
		
		private string _Telefono;
		
		private string _Direccion;
		
		public MostrarDatosDentistaGeneralResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dentista", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Dentista
		{
			get
			{
				return this._Dentista;
			}
			set
			{
				if ((this._Dentista != value))
				{
					this._Dentista = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this._Edad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this._Telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="Char(60) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this._Direccion = value;
				}
			}
		}
	}
	
	public partial class MostrarCitasGeneralResult
	{
		
		private string _Paciente;
		
		private string _Dentista;
		
		private string _Especialidad;
		
		private string _Descripcion;
		
		public MostrarCitasGeneralResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dentista", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Dentista
		{
			get
			{
				return this._Dentista;
			}
			set
			{
				if ((this._Dentista != value))
				{
					this._Dentista = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Char(200) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this._Descripcion = value;
				}
			}
		}
	}
	
	public partial class MostrarPacientesGeneralResult
	{
		
		private int _Codigo;
		
		private string _Nombre;
		
		private string _Telefono;
		
		private string _Direccion;
		
		public MostrarPacientesGeneralResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this._Telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="Char(60) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this._Direccion = value;
				}
			}
		}
	}
	
	public partial class MostrarCitas_Por_Id_PacienteResult
	{
		
		private int _Codigo;
		
		private string _Nombre;
		
		private string _Telefono;
		
		private string _Direccion;
		
		public MostrarCitas_Por_Id_PacienteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="Int NOT NULL")]
		public int Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this._Codigo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this._Telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="Char(60) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this._Direccion = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
